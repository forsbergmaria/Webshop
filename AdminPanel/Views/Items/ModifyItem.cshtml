@using Models
@model ItemViewModel

<body>
    <h2>Uppdatera produkt</h2>
    <form method="post" asp-controller="Items" asp-action="ModifyItem" enctype="multipart/form-data">
        @Html.AntiForgeryToken()
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        <div class="form-group">
            @Html.LabelFor(m => m.Name, new { @class = "col-md-2 control-label" })
            @Html.TextBoxFor(m => m.Name, new { @class = "form-control" })
            @Html.ValidationMessageFor(m => m.Name, "", new { @class = "text-danger" })
        </div>
        <div class="form-group">
            @Html.LabelFor(m => m.Brand, new { @class = "col-md-2 control-label" })
            @Html.TextBoxFor(m => m.Brand, new { @class = "form-control" })
            @Html.ValidationMessageFor(m => m.Brand, "", new { @class = "text-danger" })
        </div>
        <div class="form-group">
            @Html.LabelFor(m => m.Description, new { @class = "col-md-2 control-label" })
            @Html.TextAreaFor(m => m.Description, new { @class = "form-control" })
        </div>
        <div class="form-group">
            @Html.LabelFor(m => m.Color, new { @class = "col-md-2 control-label" })
            @Html.TextBoxFor(m => m.Color, new { @class = "form-control" })
        </div>
        <div class="form-group">
            @Html.LabelFor(m => m.ArticleNr, new { @class = "col-md-2 control-label" })
            @Html.TextBoxFor(m => m.ArticleNr, new { @class = "form-control" })
        </div>
        <div class="form-group">
            @Html.LabelFor(m => m.PriceWithoutVAT, new { @class = "col-md-2 control-label" })
            @Html.TextBoxFor(m => m.PriceWithoutVAT, new { @class = "form-control" })
            @Html.ValidationMessageFor(m => m.PriceWithoutVAT, "", new { @class = "text-danger" })
        </div>
        <div class="form-group">
            @Html.LabelFor(m => m.VAT, new { @class = "col-md-2 control-label" })
            @Html.TextBoxFor(m => m.VAT, new { @class = "form-control" })
            @Html.ValidationMessageFor(m => m.VAT, "", new { @class = "text-danger" })
        </div>
        <div class="form-check>
            @Html.LabelFor(m => m.HasSize, new { @class = "col-md-2 control-label" })
            @Html.CheckBoxFor(m => m.HasSize, new { @class = "form-check-input" })
        </div>
        <div class="form-group">
            @Html.LabelFor(m => m.Category)
            <select id="Category" name="Category" class="form-control">
                <option value="">Välj en kategori</option>
                @foreach (var category in ViewBag.Categories)
                {
                        <option value="@category.Value">@category.Text</option>
                    
                    
                }
            </select>
        </div>
        <div class="form-group">
            @Html.LabelFor(m => m.Subcategory)
            <select id="Subcategory" name="Subcategory" class="form-control" disabled>
                    <option value="">Välj en underkategori</option>
            </select>
        </div>

        <input type="hidden" id="CurrentCategory" name="CurrentCategory" value="@Model.Category" />
        <input type="hidden" id="CurrentSubcategory" name="CurrentSubcategory" value="@Model.Subcategory" />

        <div id="imageList">
        @foreach (var image in Model.ProductImages.DistinctBy(p => p.Path))
        {
            <div class="imageContainer">
                <img class="images-modify-items" src="@Url.Content(image.Path)" />
            <button class="btnRemoveImage" data-image-id="@image.ImageId">Ta bort bild</button>
            </div>
        }
        </div>
        <div class="form-group">
            @Html.LabelFor(m => m.ProductImages, new { @class = "col-md-2 control-label" })
            <input asp-for="ProductImages" type="file" name="files" multiple class="form-control-file" accept="image/jpeg, image/png, image/jpg" />
        </div>
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Uppdatera produkt" class="btn btn-primary" id="btn-updateItem-submit" />
            </div>
        </div>
        
    </form>

    @section scripts {
        <script>
            $(document).ready(function () {
                var originalSubcategoryOption = $("#Subcategory option:first-child").clone();
                var currentCategoryName = $("#CurrentCategory").val(); // Hämta aktuellt kategorinamn
                var currentSubcategoryName = $("#CurrentSubcategory").val(); // Hämta aktuellt underkategorinamn

                function loadSubcategories(categoryId) {
                    $("#Subcategory").empty().append(originalSubcategoryOption);
                    if (categoryId !== "") {
                        $.getJSON("/Items/GetSubcategories", { categoryId: categoryId }, function (data) {
                            $("#CurrentSubcategory").val("");
                            if (data.length > 0) {
                                $("#Subcategory").prop("disabled", false);
                                $.each(data, function (index, subcategory) {
                                    $("#Subcategory").append("<option value='" + subcategory.value + "'>" + subcategory.text + "</option>");
                                });

                                // Hitta och markera det matchande alternativet baserat på aktuellt underkategorinamn
                                $("#Subcategory option").filter(function () {
                                    return $(this).text() === currentSubcategoryName;
                                }).prop('selected', true);
                            } else {
                                $("#Subcategory").prop("disabled", true);
                            }
                        });
                    } else {
                        $("#Subcategory").prop("disabled", true);
                    }
                }

                $("#Category").on("change", function () {
                    var categoryId = $(this).val();
                    // Uppdatera värdet för nuvarande kategori
                    $("#CurrentCategory").val(categoryId);
                    loadSubcategories(categoryId);
                });

                // Hitta och markera det matchande alternativet baserat på aktuellt kategorinamn
                $("#Category option").filter(function () {
                    return $(this).text() === currentCategoryName;
                }).prop('selected', true);

                $("#Subcategory").on("change", function () {
                    var subcategoryId = $(this).val();
                    $("#CurrentSubcategory").val(subcategoryId);
                });

                // Ladda underkategorier för den aktuella kategorin när sidan laddas
                var currentCategoryId = $("#Category").val();
                loadSubcategories(currentCategoryId);
            });

            $(".btnRemoveImage").on("click", function (event) {
                event.preventDefault(); // Förhindra standardbeteendet för klickhändelsen

                var imageId = $(this).data("image-id");
                var containerId = "#imageContainer" + imageId;
                var confirmation = confirm("Är du säker på att du vill ta bort bilden?");

                if (confirmation) {
                    var $container = $(this).closest(".imageContainer"); // Hitta närmaste gemensamma förälder

                    $.ajax({
                        url: "/Items/DeleteImage/" + imageId,
                        type: "POST",
                        success: function (result) {
                            if (result.success) {
                                // Ta bort bilden från DOM-trädet direkt genom att använda den gemensamma föräldern
                                $container.slideUp("slow", function () {
                                    $container.remove();
                                });

                                // Visa ett meddelande om att bilden har tagits bort
                                alert(result.message);
                            } else {
                                // Visa ett felmeddelande om något gick fel
                                alert(result.message);
                            }
                        },
                        error: function (xhr, status, error) {
                            console.log(error);
                        }
                    });
                }
            });


            //$(".btnRemoveImage").on("click", function (event) {
            //    event.preventDefault(); // Förhindra standardbeteendet för klickhändelsen

            //    var imageId = $(this).data("image-id");
            //    var containerId = "#imageContainer" + imageId;
            //    var confirmation = confirm("Är du säker på att du vill ta bort bilden?");

            //    if (confirmation) {
            //        $.ajax({
            //            url: "/Items/DeleteImage/" + imageId,
            //            type: "POST",
            //            success: function (result) {
            //                if (result.success) {
            //                    // Ta bort bilden från DOM-trädet direkt
            //                    $(containerId).slideUp("slow", function () {
            //                        $(containerId).remove();
            //                    });

            //                    // Visa ett meddelande om att bilden har tagits bort
            //                    alert(result.message);
            //                } else {
            //                    // Visa ett felmeddelande om något gick fel
            //                    alert(result.message);
            //                }
            //            },
            //            error: function (xhr, status, error) {
            //                console.log(error);
            //            }
            //        });
            //    }
            //});


            //$(".btnRemoveImage").on("click", function () {
            //    var imageId = $(this).data("image-id");
            //    var containerId = "#imageContainer" + imageId;
            //    var confirmation = confirm("Är du säker på att du vill ta bort bilden?");

            //    if (confirmation) {
            //        $.ajax({
            //            url: "/Items/DeleteImage/" + imageId,
            //            type: "POST",
            //            success: function (result) {
            //                if (result.success) {
            //                    // Ta bort bilden från DOM-trädet direkt
            //                    $(containerId).slideUp("slow", function () {
            //                        $(containerId).remove();
            //                    });

            //                    // Visa ett meddelande om att bilden har tagits bort
            //                    alert(result.message);
            //                } else {
            //                    // Visa ett felmeddelande om något gick fel
            //                    alert(result.message);
            //                }
            //            },
            //            error: function (xhr, status, error) {
            //                console.log(error);
            //            }
            //        });
            //    }

            //    return false;
            //});




            //// Lyssna på klickhändelse för att ta bort bild
            //$(".btnRemoveImage").on("click", function () {
            //    var imageId = $(this).data("image-id");
            //    var containerId = "#imageContainer" + imageId;
            //    var confirmation = confirm("Är du säker på att du vill ta bort bilden?");

            //    if (confirmation) {
            //        $.ajax({
            //            url: "/Items/DeleteImage/" + imageId,
            //            type: "POST",
            //            success: function (result) {
            //                // Ta bort bilden från DOM
            //                $(containerId).fadeOut("slow", function () {
            //                    $(containerId).remove();
            //                });
            //            },
            //            error: function (xhr, status, error) {
            //                console.log(error);
            //            }
            //        });
            //    }

            //    return false;
            //});



            //$(".btnRemoveImage").on("click", function () {
            //    var imageId = $(this).data("image-id");
            //    var containerId = "#imageContainer" + imageId;
            //    var confirmation = confirm("Är du säker på att du vill ta bort bilden?");

            //    if (confirmation) {
            //        $.ajax({
            //            url: "/Items/DeleteImage/" + imageId,
            //            type: "POST",
            //            success: function (result) {
            //                $(containerId).fadeOut("slow", function () {
            //                    $(containerId).remove();
            //                });
            //            },
            //            error: function (xhr, status, error) {
            //                console.log(error);
            //            }
            //        });
            //    }
            //});


            //$(document).ready(function () {
            //    // Lägg till klickhändelsehanterare för "ta bort bild" -knappen
            //    $(".btnRemoveImage").on("click", function () {
            //        var imageId = $(this).data("image-id"); // Hämta bildens id från data-attributet

            //        // Skicka AJAX-förfrågan för att ta bort bilden
            //        $.ajax({
            //            url: "/Items/DeleteImage",
            //            type: "POST",
            //            data: { imageId: imageId },
            //            success: function (result) {
            //                // Uppdatera det visuella gränssnittet för att ta bort bilden utan att ladda om sidan
            //                $("#imageList").find("[data-image-id='" + imageId + "']").closest(".imageContainer").remove();
            //            },
            //            error: function (xhr, status, error) {
            //                // Hantera eventuella fel
            //                console.error(error);
            //            }
            //        });
            //    });
            //});

        </script>
    }
</body>